{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  console.log('Form submitted with:', FormData);\n  try {\n    const response = await fetch('http://localhost:5000/api/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: formData.email,\n        password: formData.password\n      })\n    });\n    console.log('Response received:', response);\n    const data = await response.json();\n    console.log('Data received:', data);\n    if (response.ok) {\n      console.log('Registration successful!');\n      // Store token\n      localStorage.setItem('token', data.token);\n      // Redirect\n      navigate('/dashboard');\n    } else {\n      console.error('Registration failed:', data.message);\n      setError(data.message);\n    }\n  } catch (err) {\n    console.error('Error during registration:', err);\n    setError('Registration failed');\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","console","log","FormData","response","fetch","method","headers","body","JSON","stringify","email","formData","password","data","json","ok","localStorage","setItem","token","navigate","error","message","setError","err"],"sources":["D:/Project Typescript/vendor-website/vendor-frontend/src/components/Auth/Register.tsx"],"sourcesContent":["const handleSubmit = async (e: React.FormEvent) => {\r\n  e.preventDefault();\r\n  console.log('Form submitted with:', FormData);\r\n\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/auth/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        email: formData.email,\r\n        password: formData.password\r\n      }),\r\n    });\r\n\r\n    console.log('Response received:', response);\r\n    const data = await response.json();\r\n    console.log('Data received:', data);\r\n\r\n    if (response.ok) {\r\n      console.log('Registration successful!');\r\n      // Store token\r\n      localStorage.setItem('token', data.token);\r\n      // Redirect\r\n      navigate('/dashboard');\r\n    } else {\r\n      console.error('Registration failed:', data.message);\r\n      setError(data.message);\r\n    }\r\n  } catch (err) {\r\n    console.error('Error during registration:', err);\r\n    setError('Registration failed');\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAkB,IAAK;EACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,QAAQ,CAAC;EAE7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACtEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAEC,QAAQ,CAACD,KAAK;QACrBE,QAAQ,EAAED,QAAQ,CAACC;MACrB,CAAC;IACH,CAAC,CAAC;IAEFZ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEE,QAAQ,CAAC;IAC3C,MAAMU,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClCd,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEY,IAAI,CAAC;IAEnC,IAAIV,QAAQ,CAACY,EAAE,EAAE;MACff,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC;MACAe,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACK,KAAK,CAAC;MACzC;MACAC,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,MAAM;MACLnB,OAAO,CAACoB,KAAK,CAAC,sBAAsB,EAAEP,IAAI,CAACQ,OAAO,CAAC;MACnDC,QAAQ,CAACT,IAAI,CAACQ,OAAO,CAAC;IACxB;EACF,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZvB,OAAO,CAACoB,KAAK,CAAC,4BAA4B,EAAEG,GAAG,CAAC;IAChDD,QAAQ,CAAC,qBAAqB,CAAC;EACjC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}