{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const authService = {\n  login: async data => {\n    const response = await api.post('/auth/login', data);\n    localStorage.setItem('token', response.data.token);\n    return response.data;\n  },\n  register: async data => {\n    const response = await api.post('/auth/register', data);\n    localStorage.setItem('token', response.data.token);\n    return response.data;\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n  }\n};\nexport const productService = {\n  getAll: async () => {\n    const response = await api.get('/products');\n    return response.data;\n  },\n  getById: async id => {\n    const response = await api.get(`/products/${id}`);\n    return response.data;\n  },\n  create: async data => {\n    const response = await api.post('/products', data);\n    return response.data;\n  },\n  update: async (id, data) => {\n    const response = await api.put(`/products/${id}`, data);\n    return response.data;\n  },\n  delete: async id => {\n    await api.delete(`/products/${id}`);\n  }\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","authService","login","data","response","post","setItem","register","logout","removeItem","productService","getAll","get","getById","id","update","put","delete"],"sources":["D:/Project Typescript/vendor-website/vendor-frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { LoginForm, RegisterForm, AuthResponse, Product } from '../types';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\n// Add token to requests if it exists\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const authService = {\r\n  login: async (data: LoginForm) => {\r\n    const response = await api.post<AuthResponse>('/auth/login', data);\r\n    localStorage.setItem('token', response.data.token);\r\n    return response.data;\r\n  },\r\n\r\n  register: async (data: RegisterForm) => {\r\n    const response = await api.post<AuthResponse>('/auth/register', data);\r\n    localStorage.setItem('token', response.data.token);\r\n    return response.data;\r\n  },\r\n\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n  }\r\n};\r\n\r\nexport const productService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/products');\r\n    return response.data;\r\n  },\r\n\r\n  getById: async (id: string) => {\r\n    const response = await api.get(`/products/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  create: async (data: Product) => {\r\n    const response = await api.post('/products', data);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id: string, data: Product) => {\r\n    const response = await api.put(`/products/${id}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  delete: async (id: string) => {\r\n    await api.delete(`/products/${id}`);\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;;AAEF;AACAC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMM,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAOC,IAAe,IAAK;IAChC,MAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAe,aAAa,EAAEF,IAAI,CAAC;IAClEN,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACD,IAAI,CAACP,KAAK,CAAC;IAClD,OAAOQ,QAAQ,CAACD,IAAI;EACtB,CAAC;EAEDI,QAAQ,EAAE,MAAOJ,IAAkB,IAAK;IACtC,MAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAe,gBAAgB,EAAEF,IAAI,CAAC;IACrEN,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACD,IAAI,CAACP,KAAK,CAAC;IAClD,OAAOQ,QAAQ,CAACD,IAAI;EACtB,CAAC;EAEDK,MAAM,EAAEA,CAAA,KAAM;IACZX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;EAClC;AACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG;EAC5BC,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,MAAMP,QAAQ,GAAG,MAAMf,GAAG,CAACuB,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAOR,QAAQ,CAACD,IAAI;EACtB,CAAC;EAEDU,OAAO,EAAE,MAAOC,EAAU,IAAK;IAC7B,MAAMV,QAAQ,GAAG,MAAMf,GAAG,CAACuB,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;IACjD,OAAOV,QAAQ,CAACD,IAAI;EACtB,CAAC;EAEDb,MAAM,EAAE,MAAOa,IAAa,IAAK;IAC/B,MAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,WAAW,EAAEF,IAAI,CAAC;IAClD,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC;EAEDY,MAAM,EAAE,MAAAA,CAAOD,EAAU,EAAEX,IAAa,KAAK;IAC3C,MAAMC,QAAQ,GAAG,MAAMf,GAAG,CAAC2B,GAAG,CAAC,aAAaF,EAAE,EAAE,EAAEX,IAAI,CAAC;IACvD,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC;EAEDc,MAAM,EAAE,MAAOH,EAAU,IAAK;IAC5B,MAAMzB,GAAG,CAAC4B,MAAM,CAAC,aAAaH,EAAE,EAAE,CAAC;EACrC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}